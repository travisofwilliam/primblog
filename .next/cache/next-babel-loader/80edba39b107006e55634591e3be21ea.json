{"ast":null,"code":"var _jsxFileName = \"/Users/traviswilliams/Desktop/mern/pages/new.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\n\nconst NewPost = () => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: '',\n    description: ''\n  });\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errs = validate();\n    setErrors(errs);\n  };\n\n  const handleChange = e => {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const validate = () => {\n    let err = {};\n\n    if (!form.title) {\n      err.title = 'Title is required';\n    }\n\n    if (!form.body) {\n      err.body = 'Body is required';\n    }\n\n    return err;\n  };\n\n  return __jsx(\"div\", {\n    className: \"container text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Create New Post\"), __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, \"New Post\"), __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Title: \"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"mb-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), __jsx(\"hr\", {\n    className: \"w-60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), __jsx(\"textarea\", {\n    name: \"body\",\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/mern/pages/new.js"],"names":["useState","NewPost","form","setForm","title","description","errors","setErrors","handleSubmit","e","preventDefault","errs","validate","handleChange","target","name","value","err","body"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEpB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBH,QAAQ,CAAC;AAAEI,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,WAAW,EAAE;AAA1B,GAAD,CAAhC;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,IAAI,GAAGC,QAAQ,EAAnB;AACAL,IAAAA,SAAS,CAACI,IAAD,CAAT;AACD,GAJD;;AAMA,QAAME,YAAY,GAAIJ,CAAD,IAAO;AAC1BN,IAAAA,OAAO,iCACFD,IADE;AAEL,OAACO,CAAC,CAACK,MAAF,CAASC,IAAV,GAAiBN,CAAC,CAACK,MAAF,CAASE;AAFrB,OAAP;AAID,GALD;;AAOA,QAAMJ,QAAQ,GAAG,MAAM;AACrB,QAAIK,GAAG,GAAG,EAAV;;AAEA,QAAI,CAACf,IAAI,CAACE,KAAV,EAAiB;AACfa,MAAAA,GAAG,CAACb,KAAJ,GAAY,mBAAZ;AACD;;AACD,QAAI,CAACF,IAAI,CAACgB,IAAV,EAAgB;AACdD,MAAAA,GAAG,CAACC,IAAJ,GAAW,kBAAX;AACD;;AAED,WAAOD,GAAP;AACD,GAXD;;AAaA,SACE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EACsB;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,OAAxB;AAAgC,IAAA,SAAS,EAAC,MAA1C;AAAiD,IAAA,QAAQ,EAAEK,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADtB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAU,IAAA,IAAI,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAC,EAAzB;AAA4B,IAAA,IAAI,EAAC,IAAjC;AAAsC,IAAA,IAAI,EAAC,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CAJF,CAFF,CADF;AAkBD,CAjDD;;AAmDA,eAAeZ,OAAf","sourcesContent":["import { useState } from 'react'\n\nconst NewPost = () => {\n\n  const [form, setForm] = useState({ title: '', description: '' })\n  const [errors, setErrors] = useState({})\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let errs = validate()\n    setErrors(errs)\n  }\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const validate = () => {\n    let err = {}\n\n    if (!form.title) {\n      err.title = 'Title is required'\n    }\n    if (!form.body) {\n      err.body = 'Body is required'\n    }\n\n    return err\n  }\n\n  return (\n    <div className='container text-center'>\n      <h3 className='mt-3'>Create New Post</h3>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          New Post\n        </div>\n        <div className=\"card-body\">\n          <form onSubmit={handleSubmit}>\n            <span>Title: </span><input type=\"text\" name=\"title\" className='mb-3' onChange={handleChange} />\n            <br />\n            <hr className='w-60' />\n            <textarea name=\"body\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewPost"]},"metadata":{},"sourceType":"module"}