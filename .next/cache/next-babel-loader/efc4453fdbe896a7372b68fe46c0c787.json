{"ast":null,"code":"var _jsxFileName = \"/Users/traviswilliams/Desktop/mern/pages/[id]/edit.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nconst axios = require('axios');\n\nconst Edit = ({\n  note\n}) => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: note.title,\n    description: note.description\n  });\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const {\n    0: isSubmitting,\n    1: setIsSubmitting\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        createNote();\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]);\n\n  const createNote = async () => {\n    try {\n      await axios.put(`http://localhost:3000/api/notes/${router.query.id}`, form);\n      router.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  };\n\n  const handleChange = e => {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [e.target.name]: e.target.value\n    }));\n\n    if (errors[e.target.name]) {\n      delete errors[e.target.name];\n    }\n  };\n\n  const validate = () => {\n    let err = {};\n\n    if (!form.title) {\n      err.title = 'Title is required';\n    }\n\n    if (!form.description) {\n      err.body = 'Body is required';\n    }\n\n    return err;\n  };\n\n  return __jsx(\"div\", {\n    className: \"container text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Edit Post\"), __jsx(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"card-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Edit Post\"), __jsx(\"div\", {\n    className: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, isSubmitting ? 'Loading...' : __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Title:\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"title\",\n    className: \"mb-3\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 32\n    }\n  }), errors.title && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 35\n    }\n  }, __jsx(\"i\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 38\n    }\n  }, errors.title)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), __jsx(\"hr\", {\n    className: \"w-60\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Description:\"), __jsx(\"textarea\", {\n    onChange: handleChange,\n    name: \"description\",\n    id: \"\",\n    cols: \"30\",\n    rows: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), errors.body && __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 34\n    }\n  }, __jsx(\"i\", {\n    className: \"text-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 37\n    }\n  }, errors.body)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, \"Update\")))));\n};\n\nEdit.getInitialProps = async ({\n  query: {\n    id\n  }\n}) => {\n  const res = await axios.get(`http://localhost:3000/api/notes/${id}`);\n  const {\n    data\n  } = res.data;\n  return {\n    note: data\n  };\n};\n\nexport default Edit;","map":{"version":3,"sources":["/Users/traviswilliams/Desktop/mern/pages/[id]/edit.js"],"names":["useState","useEffect","useRouter","axios","require","Edit","note","form","setForm","title","description","errors","setErrors","isSubmitting","setIsSubmitting","router","Object","keys","length","createNote","put","query","id","push","error","console","log","handleSubmit","e","preventDefault","errs","validate","handleChange","target","name","value","err","body","getInitialProps","res","get","data"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nconst axios = require('axios')\n\nconst Edit = ({ note }) => {\n\n  const [form, setForm] = useState({ title: note.title, description: note.description })\n  const [errors, setErrors] = useState({})\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const router = useRouter()\n\n  useEffect(() => {\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        createNote()\n      } else {\n        setIsSubmitting(false)\n      }\n    }\n  }, [errors])\n\n  const createNote = async () => {\n    try {\n      await axios.put(`http://localhost:3000/api/notes/${router.query.id}`, form)\n\n      router.push('/')\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    let errs = validate()\n    setErrors(errs)\n    setIsSubmitting(true)\n  }\n\n  const handleChange = (e) => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    })\n    if (errors[e.target.name]) {\n      delete errors[e.target.name]\n    }\n  }\n\n  const validate = () => {\n    let err = {}\n\n    if (!form.title) {\n      err.title = 'Title is required'\n    }\n    if (!form.description) {\n      err.body = 'Body is required'\n    }\n\n    return err\n  }\n\n  return (\n    <div className='container text-center'>\n      <h3 className='mt-3'>Edit Post</h3>\n      <div className=\"card\">\n        <div className=\"card-header\">\n          Edit Post\n        </div>\n        <div className=\"card-body\">\n          {\n            isSubmitting ? 'Loading...'\n              :\n              <form onSubmit={handleSubmit}>\n                <h4>Title:</h4><input type=\"text\" name=\"title\" className='mb-3' onChange={handleChange} />\n                {\n                  errors.title && <p><i className='text-danger'>{errors.title}</i></p>\n                }\n                <br />\n                <hr className='w-60' />\n                <h4>Description:</h4>\n                <textarea onChange={handleChange} name=\"description\" id=\"\" cols=\"30\" rows=\"10\" />\n                {\n                  errors.body && <p><i className='text-danger'>{errors.body}</i></p>\n                }\n                <br />\n                <button type=\"submit\" className='btn btn-primary'>Update</button>\n              </form>\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\nEdit.getInitialProps = async ({ query: { id } }) => {\n  const res = await axios.get(`http://localhost:3000/api/notes/${id}`)\n\n  const { data } = res.data\n\n  return { note: data }\n}\n\nexport default Edit"]},"metadata":{},"sourceType":"module"}